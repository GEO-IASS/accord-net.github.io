<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.DataSets</name>
    </assembly>
    <members>
        <member name="T:Accord.DataSets.RCV1v2">
            <summary>
              RCV1-v2/LYRL2004, a text categorization test collection originally 
              distributed as a set of on-line appendices to a JMLR journal article.
            </summary>
            
            <remarks>
            <para>
              References:
              <list type="bullet">
                <item><description><a href="http://jmlr.csail.mit.edu/papers/volume5/lewis04a/lyrl2004_rcv1v2_README.htm">
                  Lewis, D. D.  RCV1-v2/LYRL2004: The LYRL2004 Distribution of the RCV1-v2 Text Categorization
                  Test Collection (5-Mar-2015 Version). http://www.jmlr.org/papers/volume5/lewis04a/lyrl2004_rcv1v2_README.htm.  </a>
                  </description></item>
               </list></para>
            </remarks>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.Classes">
            <summary>
              Gets the document class labels in this dataset.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.ClassLabelToDocument">
            <summary>
              Gets a mapping giving a list of all document labels 
              that have been labelled with a given class label.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.DocumentToClassLabel">
            <summary>
              Gets a mapping giving a list of all class labels that
              a document has been labelled with.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.Documents">
            <summary>
              Gets a mapping of a document identifier and all the words it contains.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.Training">
            <summary>
            Gets the training set of the RCV1-v2 dataset.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.RCV1v2.Testing">
            <summary>
            Gets the testiong set of the RCV1-v2 dataset.
            </summary>
            
        </member>
        <member name="M:Accord.DataSets.RCV1v2.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
              Downloads and prepares the RCV1-v2 dataset.
            </summary>
            
            <param name="path">The path where datasets will be stored. If null or empty, the dataset
              will be saved on a subfolder called "data" in the current working directory.</param>
            <param name="downloadTrainingSet">Pass true to download the training set; false otherwise.</param>
            <param name="downloadTestingSet">Pass true to download the testing set; false otherwise.</param>
            
        </member>
        <member name="T:Accord.DataSets.News20">
            <summary>
              20 Newsgroups dataset.
            </summary>
            
            <remarks>
            The 20 Newsgroups data set is a collection of approximately 20,000 newsgroup documents,
            partitioned (nearly) evenly across 20 different newsgroups. 
            
            http://qwone.com/~jason/20Newsgroups/
            </remarks>
            
            <seealso cref="T:Accord.DataSets.MNIST" />
            <seealso cref="T:Accord.DataSets.Iris" />
            <seealso cref="T:Accord.DataSets.Base.SparseDataSet" />
            
        </member>
        <member name="P:Accord.DataSets.News20.Training">
            <summary>
            Gets the training set of the News20 dataset.
            </summary>
        </member>
        <member name="P:Accord.DataSets.News20.Testing">
            <summary>
            Gets the testing set of the News20 dataset.
            </summary>
        </member>
        <member name="M:Accord.DataSets.News20.#ctor(System.String)">
            <summary>
              Downloads and prepares the News20 dataset.
            </summary>
            
            <param name="path">The path where datasets will be stored. If null or empty, the dataset
            will be saved on a subfolder called "data" in the current working directory.</param>
            
        </member>
        <member name="T:Accord.DataSets.MNIST">
            <summary>
              MNIST Dataset of handwritten digits.
            </summary>
            
            <remarks>
            <para>
              The MNIST database (Mixed National Institute of Standards and Technology database) is a large database
              of handwritten digits that is commonly used for training various image processing systems. The database 
              is also widely used for training and testing in the field of machine learning. It was created by
              "re-mixing" the samples from NIST's original datasets. The creators felt that since NIST's training 
              dataset was taken from American Census Bureau employees, while the testing dataset was taken from 
              American high school students, it was not well-suited for machine learning experiments. Furthermore, 
              the black and white images from NIST were normalized to fit into a 20x20 pixel bounding box and 
              anti-aliased, which introduced grayscale levels.</para>
              
            <para>
              The MNIST database contains 60,000 training images and 10,000 testing images. Half of the training set 
              and half of the test set were taken from NIST's training dataset, while the other half of the training
              set and the other half of the test set were taken from NIST's testing dataset. There have been a number 
              of scientific papers on attempts to achieve the lowest error rate; one paper, using a hierarchical system 
              of convolutional neural networks, manages to get an error rate on the MNIST database of 0.23 percent. The 
              original creators of the database keep a list of some of the methods tested on it. In their original paper,
              they use a support vector machine to get an error rate of 0.8 percent.</para>
              
            <para>
              References:
              <list type="bullet">
                <item><description><a href="https://en.wikipedia.org/wiki/MNIST_database">
                  Wikipedia contributors. "MNIST database." Wikipedia, The Free Encyclopedia. 
                  Wikipedia, The Free Encyclopedia, 14 Nov. 2016. Web. 14 Nov. 2016. </a>
                  </description></item>
               </list></para>
            </remarks>
            
            <seealso cref="T:Accord.DataSets.Base.SparseDataSet" />
            
        </member>
        <member name="P:Accord.DataSets.MNIST.Training">
            <summary>
            Gets the training set of the MNIST dataset.
            </summary>
        </member>
        <member name="P:Accord.DataSets.MNIST.Testing">
            <summary>
            Gets the testing set of the MNIST dataset.
            </summary>
        </member>
        <member name="M:Accord.DataSets.MNIST.#ctor(System.String)">
            <summary>
              Downloads and prepares the MNIST dataset.
            </summary>
            
            <param name="path">The path where datasets will be stored. If null or empty, the dataset
            will be saved on a subfolder called "data" in the current working directory.</param>
            
        </member>
        <member name="T:Accord.DataSets.Iris">
            <summary>
              Fisher's Iris flower data set.
            </summary>
            
            <remarks>
            <para>
              The Iris flower data set or Fisher's Iris data set is a multivariate data set 
              introduced by Ronald Fisher in his 1936 paper The use of multiple measurements 
              in taxonomic problems as an example of linear discriminant analysis. It is
              sometimes called Anderson's Iris data set because Edgar Anderson collected the 
              data to quantify the morphologic variation of Iris flowers of three related species.
              Two of the three species were collected in the Gaspé Peninsula "all from the same
              pasture, and picked on the same day and measured at the same time by the same person
              with the same apparatus".</para>
              
            <para>
              The data set consists of 50 samples from each of three species of Iris(Iris setosa, 
              Iris virginica and Iris versicolor). Four features were measured from each sample: 
              the length and the width of the sepals and petals, in centimetres. Based on the 
              combination of these four features, Fisher developed a linear discriminant model to
              distinguish the species from each other.</para>
            
            <para>
              References:
              <list type="bullet">
                <item><description><a href="https://en.wikipedia.org/wiki/Iris_flower_data_set">
                  Wikipedia contributors. "Iris flower data set." Wikipedia, The Free Encyclopedia. 
                  Wikipedia, The Free Encyclopedia, 14 Nov. 2016. Web. 14 Nov. 2016. </a>
                  </description></item>
               </list></para>
            </remarks>
            
            <seealso cref="T:Accord.DataSets.MNIST" />
            <seealso cref="T:Accord.DataSets.Base.SparseDataSet" />
            
        </member>
        <member name="P:Accord.DataSets.Iris.Training">
            <summary>
            Gets the Iris dataset.
            </summary>
            
        </member>
        <member name="M:Accord.DataSets.Iris.#ctor(System.String)">
            <summary>
              Downloads and prepares the Iris dataset.
            </summary>
            
            <param name="path">The path where datasets will be stored. If null or empty, the dataset
            will be saved on a subfolder called "data" in the current working directory.</param>
            
        </member>
        <member name="T:Accord.DataSets.Base.SparseDataSet">
            <summary>
              Base class for sparse datasets that can be downloaded from LIBSVM website.
            </summary>
            
        </member>
        <member name="P:Accord.DataSets.Base.SparseDataSet.Path">
            <summary>
            Gets the path to the directory where the datasets will be stored.
            </summary>
            
            <value>The path to a directory.</value>
            
        </member>
        <member name="M:Accord.DataSets.Base.SparseDataSet.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.DataSets.Base.SparseDataSet"/> class.
            </summary>
            
            <param name="path">The path where datasets will be stored. If null or empty, the dataset
              will be saved on a subfolder called "data" in the current working directory.</param>
            
        </member>
        <member name="M:Accord.DataSets.Base.SparseDataSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Accord.DataSets.Base.SparseDataSet" /> class.
            </summary>
            
        </member>
        <member name="M:Accord.DataSets.Base.SparseDataSet.Download(System.String)">
            <summary>
            Downloads the dataset from a specified URL, saving it to disk, and returning
            it as a set of <see cref="T:Accord.Math.Sparse`1">sparse vectors</see>>. If the dataset
            already exists in the disk, it will not be redownloaded again.
            </summary>
            
            <param name="url">The URL where the dataset resides.</param>
            
            <returns>System.Tuple&lt;Accord.Math.Sparse&lt;System.Double&gt;[], System.Double[]&gt;.</returns>
            
        </member>
        <member name="M:Accord.DataSets.Base.SparseDataSet.Download(System.String,System.String,System.String@)">
            <summary>
              Downloads a file from the specified <paramref name="url"/>, 
              storing in <paramref name="path"/>, under name <paramref name="uncompressedFileName"/>.
            </summary>
            
            <param name="url">The URL where the file should be downloaded from.</param>
            <param name="path">The path where the file will be stored localy.</param>
            <param name="uncompressedFileName">The generated name of the uncompressed file.</param>
            
            <returns><c>true</c> if the download succeeded, <c>false</c> otherwise.</returns>
            
        </member>
    </members>
</doc>
